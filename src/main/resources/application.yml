spring:
  profiles:
    active: prod

  jpa:
    hibernate:
      ddl-auto: update   # 기존 테이블 유지 + 스키마 변경만 반영 (drop 아님)
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/naver"
            scope: [name, email]
            provider: naver
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: [openid, email, profile]
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            scope: [account_email, profile_nickname]
            provider: kakao
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/facebook"
            scope: [public_profile, email]
            provider: facebook
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          facebook:
            authorization-uri: https://www.facebook.com/v17.0/dialog/oauth
            token-uri: https://graph.facebook.com/v17.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/me?fields=id,name,email
            user-name-attribute: id

server:
  forward-headers-strategy: framework
  servlet:
    session:
      cookie:
        name: JSESSIONID
        path: /
        http-only: true
        secure: true
        same-site: none
        # domain: recipfree.com  # (필요할 때만 켜기. 보통은 주석 유지)

# 로깅은 'spring' 블록 바깥(최상단)에 둬야 적용됨
logging:
  level:
    root: info
    org.springframework.web: debug
    org.springframework.security: trace
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

openai:
  model: gpt-4.1-mini

app:
  front-base: ${FRONT_BASE:https://recipfree.com}
